{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/AddContactForm/AddContactForm.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/Section/Section.js","Components/AddContactForm/AddContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Title","AddContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","Form","CONFIG","map","field","Label","label","id","nanoid","onChange","Input","type","pattern","required","Button","onClick","this","Component","ContactItem","Item","Wrapper","Name","Number","ContactList","contacts","contactsList","contact","Filter","App","filter","addContact","alreadyExist","find","toLowerCase","alert","changeFilter","currentTarget","getFilteredContacts","includes","removeContact","contactId","prevState","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b3a42c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactItem_Item__3M0vg\",\"Wrapper\":\"ContactItem_Wrapper__2iP7R\",\"Name\":\"ContactItem_Name__dIdJe\",\"Number\":\"ContactItem_Number__3-SmA\",\"Button\":\"ContactItem_Button__2Q9Nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddContactForm_Form__1DeAR\",\"Label\":\"AddContactForm_Label__1T2QK\",\"Input\":\"AddContactForm_Input__1Q7i1\",\"Button\":\"AddContactForm_Button__9d86-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1tzbd\",\"Title\":\"Section_Title__3G1tT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2hF9g\",\"Input\":\"Filter_Input__2ezub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2SmlK\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      {title && <h1 className={s.Title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from 'react';\r\nimport s from './AddContactForm.module.css';\r\nimport CONFIG from '../../Data/inputConfig.json';\r\nimport { nanoid } from 'nanoid';\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.Form}>\r\n        {CONFIG.map(field => (\r\n          <div key={field.name}>\r\n            <label className={s.Label}>\r\n              {field.label}\r\n              <input\r\n                id={nanoid()}\r\n                value={this.state[field.name]}\r\n                onChange={this.handleChange}\r\n                className={s.Input}\r\n                type={field.type}\r\n                name={field.name}\r\n                pattern={field.pattern}\r\n                title={field.title}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <button className={s.Button} type=\"submit\" onClick={this.handleSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\n\r\nfunction ContactItem({ id, name, number, onClick }) {\r\n  return (\r\n    <li key={id} className={s.Item}>\r\n      <div className={s.Wrapper}>\r\n        <p className={s.Name}>{name}:</p>\r\n        <p className={s.Number}>{number}</p>\r\n      </div>\r\n      <button type=\"button\" onClick={() => onClick()} className={s.Button}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nfunction ContactList({ contacts, onClick }) {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onClick={() => onClick(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.Label}>\r\n      Find contact by name\r\n      <input\r\n        className={s.Input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './Components/Section/Section';\r\nimport AddContactForm from './Components/AddContactForm/AddContactForm';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\nimport { nanoid } from 'nanoid';\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    // contacts: [\r\n    //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    // ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const alreadyExist = this.state.contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (!alreadyExist && name !== '' && number !== '') {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [{ id: nanoid(), name, number }, ...contacts],\r\n      }));\r\n    } else if (alreadyExist) {\r\n      alert(`${name} is already exists in contacts`);\r\n    } else if (name === '' || number === '') {\r\n      alert('Fill in all the fields please!');\r\n    }\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Phonebook\">\r\n          <AddContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n          )}\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onClick={this.removeContact}\r\n          ></ContactList>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}